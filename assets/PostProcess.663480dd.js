import{c as u}from"./webgl.0c8613b1.js";class o{constructor(t,r,f){this.gl=t,this.canvas=t.canvas;const a=R(t,this.canvas.width,this.canvas.height),[i,s]=n(t);this.framebuffer=a,this.vertexBuffer=i,this.textureBuffer=s,this.startTime=Date.now(),this.configureShader(r,f)}configureShader(t,r){const f=this.gl;this.program&&this.program.dispose(),this.program=u(f,t,r,[],[])}validateSize(){const{width:t,height:r}=this.canvas;this.framebuffer.resize(t,r)}drawToFramebuffer(t){this.validateSize(),this.framebuffer.use(t)}draw(t){const r=this.gl,{width:f,height:a}=this.canvas;this.program.use(),r.enableVertexAttribArray(this.program.attributes.aVertexPosition),r.bindBuffer(r.ARRAY_BUFFER,this.vertexBuffer),r.vertexAttribPointer(this.program.attributes.aVertexPosition,2,r.FLOAT,!1,0,0),r.enableVertexAttribArray(this.program.attributes.aVertexTextureCoords),r.bindBuffer(r.ARRAY_BUFFER,this.textureBuffer),r.vertexAttribPointer(this.program.attributes.aVertexTextureCoords,2,r.FLOAT,!1,0,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,this.framebuffer.texture),this.program.setUniform("uSampler","sampler2D",0),this.program.uniforms.uTime&&this.program.setUniform("uTime","float",(Date.now()-this.startTime)/1e3),this.program.uniforms.uInverseTextureSize&&this.program.setUniform("uInverseTextureSize","vec2",[1/f,1/a]),t==null||t(),r.drawArrays(r.TRIANGLES,0,6)}dispose(){this.program.dispose(),this.framebuffer.dispose(),this.gl.deleteBuffer(this.vertexBuffer),this.gl.deleteBuffer(this.textureBuffer)}}const R=(e,t,r)=>{const f=e.createTexture();e.bindTexture(e.TEXTURE_2D,f),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,r,0,e.RGBA,e.UNSIGNED_BYTE,null);const a=e.createRenderbuffer();e.bindRenderbuffer(e.RENDERBUFFER,a),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,t,r);const i=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,f,0),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,a),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),{buffer:i,texture:f,use:s=>{e.bindFramebuffer(e.FRAMEBUFFER,i),s(),e.bindFramebuffer(e.FRAMEBUFFER,null)},resize:(s,E)=>{e.bindTexture(e.TEXTURE_2D,f),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,s,E,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindRenderbuffer(e.RENDERBUFFER,a),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,s,E),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null)},dispose:()=>{e.deleteTexture(f),e.deleteFramebuffer(i),e.deleteRenderbuffer(a)}}},n=e=>{const t=[-1,-1,1,-1,-1,1,-1,1,1,-1,1,1],r=[0,0,1,0,0,1,0,1,1,0,1,1],f=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,new Float32Array(t),e.STATIC_DRAW);const a=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,new Float32Array(r),e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),[f,a]};export{o as P};
