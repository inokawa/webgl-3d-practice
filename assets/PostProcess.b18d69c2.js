import{c as R}from"./webgl.0c8613b1.js";class F{constructor(r,t,f){this.gl=r,this.canvas=r.canvas;const[i,s,a]=n(r,this.canvas.width,this.canvas.height),[u,E]=T(r);this.texture=i,this.framebuffer=a,this.renderbuffer=s,this.vertexBuffer=u,this.textureBuffer=E,this.startTime=Date.now(),this.configureShader(t,f)}configureShader(r,t){const f=this.gl;this.program&&this.program.dispose(),this.program=R(f,r,t,[],[])}validateSize(){const r=this.gl,{width:t,height:f}=this.canvas;r.bindTexture(r.TEXTURE_2D,this.texture),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t,f,0,r.RGBA,r.UNSIGNED_BYTE,null),r.bindRenderbuffer(r.RENDERBUFFER,this.renderbuffer),r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_COMPONENT16,t,f),r.bindTexture(r.TEXTURE_2D,null),r.bindRenderbuffer(r.RENDERBUFFER,null)}drawToFramebuffer(r){const t=this.gl;this.validateSize(),t.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer),r(),t.bindFramebuffer(t.FRAMEBUFFER,null)}draw(r){const t=this.gl,{width:f,height:i}=this.canvas;this.program.use(),t.enableVertexAttribArray(this.program.attributes.aVertexPosition),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.vertexAttribPointer(this.program.attributes.aVertexPosition,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(this.program.attributes.aVertexTextureCoords),t.bindBuffer(t.ARRAY_BUFFER,this.textureBuffer),t.vertexAttribPointer(this.program.attributes.aVertexTextureCoords,2,t.FLOAT,!1,0,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.texture),this.program.setUniform("uSampler","sampler2D",0),this.program.uniforms.uTime&&this.program.setUniform("uTime","float",(Date.now()-this.startTime)/1e3),this.program.uniforms.uInverseTextureSize&&this.program.setUniform("uInverseTextureSize","vec2",[1/f,1/i]),r==null||r(),t.drawArrays(t.TRIANGLES,0,6)}dispose(){this.program.dispose(),this.gl.deleteTexture(this.texture),this.gl.deleteFramebuffer(this.framebuffer),this.gl.deleteRenderbuffer(this.renderbuffer),this.gl.deleteBuffer(this.vertexBuffer),this.gl.deleteBuffer(this.textureBuffer)}}const n=(e,r,t)=>{const f=e.createTexture();e.bindTexture(e.TEXTURE_2D,f),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r,t,0,e.RGBA,e.UNSIGNED_BYTE,null);const i=e.createRenderbuffer();e.bindRenderbuffer(e.RENDERBUFFER,i),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,r,t);const s=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,f,0),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,i),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),[f,i,s]},T=e=>{const r=[-1,-1,1,-1,-1,1,-1,1,1,-1,1,1],t=[0,0,1,0,0,1,0,1,1,0,1,1],f=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,new Float32Array(r),e.STATIC_DRAW);const i=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,new Float32Array(t),e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,null),[f,i]};export{F as P};
